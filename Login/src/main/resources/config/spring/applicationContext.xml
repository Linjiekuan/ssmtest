<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
			            http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
			            http://www.springframework.org/schema/context
			            http://www.springframework.org/schema/context/spring-context-4.2.xsd
			            http://www.springframework.org/schema/mvc
			            http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
			            http://www.springframework.org/schema/tx
			            http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
			            http://mybatis.org/schema/mybatis-spring 
			            http://mybatis.org/schema/mybatis-spring.xsd ">
     <bean
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:config/jdbc.properties</value>
                <value>classpath*:config/redis.properties</value>
            </list>
        </property>
    </bean>
<!--     <context:property-placeholder location="classpath*:config/jdbc.properties"></context:property-placeholder>
    --> 
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>  
        <property name="url"  value="${jdbc.url}"/>  
        <property name="username"  value="${jdbc.username}"/>  
        <property name="password"  value="${jdbc.password}"/>  
        <property name="maxActive" value="30"/>  
        <property name="maxIdle"  value="5"/> 
    </bean>
	 <!-- 扫描com.ljk包下面的java文件，有Spring的相关注解的类，则把这些类注册为Spring的bean -->
    <context:component-scan base-package="com.ljk"/>
     <!-- mybatis:scan会将com.ljk.dao包里的所有接口当作mapper配置，之后可以自动引入dao类-->  
         <mybatis:scan  base-package="com.ljk.dao"/>     
    <!--配置sqlSessionFactory 并将数据源注入-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--指定要使用到到mybatis配置文件-->
        <property name="configLocation" value="classpath:config/mapper/mapper.xml"/>
        <!--用于配置mapper映射xml-->
        <property name="mapperLocations" value="classpath:com/ljk/dao/*.xml"/>
    </bean>
    <!-- 创建数据映射器-->
    <bean  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
          <property name="basePackage" value="com.ljk.dao"/>
          <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
 
 
     <!-- 连接池 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="20"></property>
        <property name="maxIdle" value="10"></property>
        <property name="minIdle" value="0"></property>
        <property name="maxWaitMillis" value="-1"></property>
        <property name="minEvictableIdleTimeMillis" value="1800000"></property>
        <property name="numTestsPerEvictionRun" value="3"></property>
        <property name="timeBetweenEvictionRunsMillis" value="60000"></property>
        <property name="testOnBorrow" value="true"></property>
        <property name="testOnReturn" value="true"></property>
        <property name="testWhileIdle" value="true"></property>
    </bean>

    <!-- 连接工厂 -->
    <bean id="connectionFactory"
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
        p:host-name="127.0.0.1" p:port="6379" p:password=""
        p:pool-config-ref="poolConfig" />

    <!-- String模板 -->
    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
    </bean>

    <!-- 通用模板 -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
        
        <!-- 默认序列器是如下配置，看RedisTemplate源码可知 -->
        <!-- 
        <property name="KeySerializer" ref="jdkSerializationRedisSerializer" />
        <property name="ValueSerializer" ref="jdkSerializationRedisSerializer" />
         -->
         
    </bean>
    
    <!-- 各种序列器 -->
    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    <bean id="jdkSerializationRedisSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
 
 
 
    <!-- 对数据源进行事务管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>   
        <!-- 启用支持annotation注解方式事务管理 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>